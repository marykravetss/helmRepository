apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.nginx.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.nginx.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.nginx.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.nginx.name }}
    spec:
      containers:
      - name: {{ .Values.nginx.name }}
        image: {{ .Values.nginx.image }}
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tls-crt
          mountPath: /etc/nginx/ssl/fullchain.pem
          subPath: fullchain.pem
        - name: tls-key
          mountPath: /etc/nginx/ssl/privkey.pem
          subPath: privkey.pem
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
        startupProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
      volumes:
      - name: nginx-config
        configMap:
          name: {{ .Values.nginx.configMapName }}
      - name: tls-crt
        secret:
          secretName: my-tls-secret
          items:
          - key: tls.crt
            path: fullchain.pem
      - name: tls-key
        secret:
          secretName: my-tls-secret
          items:
          - key: tls.key
            path: privkey.pem
